#!/bin/bash
########################################################################
#Script convertissant les images d'un format vers un autre
#Nom du script: Convertir l'image en v1.0
#Auteur: Astohan
#Site Web: http://ankala.co.cc
#Source:Documentation de imagemagick
#Licence: GPL v3
#À venir en v1.1: Donner plus de formats en sortie
########################################################################
version="v1.0"

IFS="
"
########################################################################
########################### PRÉ-REQUIS #################################

	# On s'assure qu'un fichier est seléctionné
	mime=`file -bi "$1"`;
	correct_image="0";

	# On s'assure que le fichier IMAGE est dans le bon format: png, jpg, gif
	if echo "$1" | grep -q '.png'|| echo "$1" | grep -q '.PNG'; then
		echo "File is in .png Format"
		image_type="png"
		correct_image="1"
	elif echo "$1" | grep -q '.jpeg'|| echo "$1" | grep -q '.JPEG'; then
		echo "File is in .jpeg Format"
		image_type="jpeg"
		correct_image="1"
		elif echo "$1" | grep -q '.svg'|| echo "$1" | grep -q '.SVG'; then
		echo "File is in .svg Format"
		image_type="svg"
		correct_image="1"
	elif echo "$1" | grep -q '.jpg' || echo "$1" | grep -q '.JPG'; then
		echo "File is in .jpg Format"
		image_type="jpg"
		correct_image="1"
	elif echo "$1" | grep -q '.gif'|| echo "$1" | grep -q '.GIF'; then
		echo "File is in .gif Format"
		image_type="gif"
		correct_image="1"
	elif [ $1 -eq 0 ]; then
		zenity --error --title="Erreur" --text="Vous devez sélectionner un fichier image..."
		exit 1
	elif [ $correct_image -eq 0 ]; then
		zenity --error --title="Erreur - Format non supporté -" --text="Les formats image supportés sont: <b>png, jpg, gif ou svg</b>."
		exit 1
	else
		zenity --error --title="Erreur" --text="Erreur inconnue. Réessayez !"
		exit 1
	fi

########################################################################
####################### FIN PRÉ-REQUIS #################################	
	

########################### ENCODAGE image #############################
	# Si le format image est correct, afficher les options suivantes
	if [ $correct_image -eq "1" ]; then
	do_encode="0";

	# Menu sélection du format de sortie 
	option=`zenity --list --radiolist --width="300" --height="200" --title="Convertir les images $version" --column="Check" --column="Option" \
	TRUE "Convertir en PNG" \
	FALSE "Convertir en JPEG" \
	FALSE "Convertir en GIF" `;
	do_encode="1";

	# Convertir l'image
	if [[ $do_encode -eq "1" ]]; then

	if [ "$option" = "Convertir en PNG" ]; then
	file=$1
	basename=${file%.*}
	convert_image=`convert "$@" "$basename".png \
	| zenity --progress --width="500" --pulsate --auto-close --title "Conversion en cours..." \
	--text "Conversion des images sélectionnées vers le format <b>PNG</b>."`;

	# Image d'origine est SVG
	if echo "$1" | grep -q '.svg$'; then
	encode_image=`convert -background none "$@" "$basename".png \
	| zenity --progress --width="500" --pulsate --auto-close --title "Conversion en cours..." \
	--text "Conversion des images SVG sélectionnées vers le format <b>PNG</b>."`;
	fi
fi

fi

#####################################
	# Conversion vers format 'jpg'
	if [ "$option" = "Convertir en JPEG" ]; then
	file=$1
	basename=${file%.*}
	convert_image=`convert "$@" "$basename".jpg \
	| zenity --progress --width="500" --pulsate --auto-close --title "Conversion en cours..." \
	--text "Conversion des images sélectionnées vers le format <b>JPEG</b>."`;
	fi
fi
####################################
	# Conversion vers format 'gif'
	if [ "$option" = "Convertir en GIF" ]; then
	file=$1
	basename=${file%.*}
	convert_image=`convert "$@" "$basename".gif \
	| zenity --progress --width="500" --pulsate --auto-close --title "Conversion en cours..." \
	--text "Conversion des images JPG sélectionnées vers le format <b>GIF</b>."`;
	fi



	# Afficher résultat de la conversion
	if [[ $convert_image != 0 ]]; then
	notify-send -i /usr/share/icons/Humanity/categories/48/applications-graphics.svg "Conversion des images" "La conversion des images sélectionnées est terminée !";
	else
	zenity --error --title "Erreur!" -- text "Echec de la conversion !";
	fi
	
fi
fi
### FIN DU SCRIPT
fi
### FIN DU SCRIPT
