#!/bin/bash
########################################################################
#Script transformant une vidéos en x images
#Nom du script: Video vers Galerie v1.2
#Auteur: Astohan
#Site Web: http://ankala.co.cc
#Source:Documentation de avconv
#Licence: GPL v3
#À venir en v1.3: ?
########################################################################
version="v1.2"

	# On s'assure que 'avconv' est bien installé
	avconv_exists=`which avconv | grep -c "avconv"`

	# On affiche une erreur si 'avconv' n'est pas installé
	# On tente une installation automatique de 'avconv'
	if [ $avconv_exists -eq 0 ]; then
		avconv_error=`zenity --error --title="Erreur - Outil de conversion manquant !" --text="Vous devez installer le paquet avconv afin d'utiliser ce script.\n\nTentative d'installation automatique amorcée."`;
		install_avconv=`gksudo apt-get install avconv | zenity --progress --pulsate --title "Installation de avconv" --text "Installation en cours..." --auto-close`;
	fi
	
	# On s'assure que l'installation automatique de 'avconv' a réussi
	avconv_exists2=`which avconv | grep -c "avconv"`
	
	# Si ce n'est pas le cas, on affiche une erreur et on quitte
	if [ $avconv_exists2 -eq 0 ]; then
		zenity --error --title="Erreur détectée !" --text="ERREUR: La tentative d'installation automatique a échouée. Veuillez installer avconv manuellement, à partir de votre terminal: sudo apt-get install avconv";
		exit;
	fi

	# On s'assure qu'un fichier est seléctionné
	mime=`file -bi "$1"`;
	correct_video="0";

	# On s'assure que le fichier VIDEO est dans le bon format: ogv, flv, asf, mp4, m4v, avi, 3gp, bik, mov, mpg, dv, mkv, webm, ts, vob
	## Liste des extensions vidéo
	if echo "$1" | grep -q '.3gp'|| echo "$1" | grep -q '.3g2'; then
		echo "File is in .3gp Format"
		video_type="3gp"
		correct_video="1"
	elif echo "$1" | grep -q '.mkv'|| echo "$1" | grep -q '.mkv'; then
		echo "File is in .mkv Format"
		video_type="mkv"
		correct_video="1"
	elif echo "$1" | grep -q '.vob'|| echo "$1" | grep -q '.VOB'; then
		echo "File is in .vob Format"
		video_type="vob"
		correct_video="1"
	elif echo "$1" | grep -q '.webm'|| echo "$1" | grep -q '.WEBM'; then
		echo "File is in .webm Format"
		video_type="webm"
		correct_video="1"
	elif echo "$1" | grep -q '.ts'|| echo "$1" | grep -q '.TS'; then
		echo "File is in .ts Format"
		video_type="ts"
		correct_video="1"
	elif echo "$1" | grep -q '.ogv'|| echo "$1" | grep -q '.OGV'; then
		echo "File is in .ogv Format"
		video_type="ogv"
		correct_video="1"
	elif echo "$1" | grep -q '.dv'|| echo "$1" | grep -q '.DV'; then
		echo "File is in .dv Format"
		video_type="dv"
		correct_video="1"
	elif echo "$1" | grep -q '.flv'|| echo "$1" | grep -q '.FLV'; then
		echo "File is in .flv Format"
		video_type="flv"
		correct_video="1"
	elif echo "$1" | grep -q '.asf' || echo "$1" | grep -q '.ASF'; then
		echo "File is in .asf Format"
		video_type="asf"
		correct_video="1"
	elif echo "$1" | grep -q '.mp4'|| echo "$1" | grep -q '.MP4'; then
		echo "File is in .mp4 Format"
		video_type="mp4"
		correct_video="1"
	elif echo "$1" | grep -q '.m4v'|| echo "$1" | grep -q '.M4V'; then
		echo "File is in .m4v Format"
		video_type="m4v"
		correct_video="1"
	elif echo "$1" | grep -q '.avi'|| echo "$1" | grep -q '.AVI'; then
		echo "File is in .avi Format"
		video_type="avi"
		correct_video="1"
	elif echo "$1" | grep -q '.bik'|| echo "$1" | grep -q '.BIK'; then
		echo "File is in .bik Format"
		video_type="bik"
		correct_video="1"
	elif echo "$1" | grep -q '.mov'|| echo "$1" | grep -q '.MOV'; then
		echo "File is in .mov Format"
		video_type="mov"
		correct_video="1"
	elif echo "$1" | grep -q '.mpg'|| echo "$1" | grep -q '.MPG'; then
		echo "File is in .mpg Format"
		video_type="mpg"
		correct_video="1"
	elif [ $1 -eq 0 ]; then
		zenity --error --title="Erreur" --text="Vous devez sélectionner un fichier vidéo..."
		exit 1
	elif [ $correct_video -eq 0 ]; then
		zenity --error --title="Erreur - Format non supporté -" --text="Sélectionnez un fichier <b>ogv, flv, asf, mp4, m4v, avi, mkv, 3gp, bik, mov, mpg, dv, webm, ts, vob</b> valide."
		exit 1
	else
		zenity --error --title="Erreur" --text="Erreur inconnue. Réessayez !"
		exit 1
	fi

	# Si le format vidéo est correct, afficher les options suivantes
	if [ $correct_video -eq "1" ]; then

	# Menu principal - Choix du format d'images à générer
	option=`zenity --list --radiolist --width="530" --height="200" --title="Format des images" \
	--radiolist --column="Cocher" --text="Choisir le type d'images à générer" --column="Type" --column="Description"\
	TRUE "Galerie PNG" "Créer une galerie d'images png de la vidéo source" \
	FALSE "Galerie JPG" "Créer une galerie d'images jpg de la vidéo source" `;

	# Option 'Format PNG' sélectionnée
	if [ "$option" = "Galerie PNG" ]; then
	# Entrer le nombre d'images
	number=`zenity --entry --title="Nombre d'images à générer" --entry-text "10" --text="Choisissez le nombre d'images issues de votre vidéo source. \n\nEntrez uniquement une valeur numérique."`

	# Entrer le début de la génération (seconde de départ)
	seconde=`zenity --entry --title="Début de la première image" --entry-text "1" --text="À partir de combien de secondes de votre vidéo voulez-vous démarrer la galerie ? \n\nEntrez uniquement une valeur numérique."`

	# Génération de la gallerie PNG
	mkdir galeriePNG_"$1"
	genere_png=`avconv -i "$1" -ss "$seconde" -vframes "$number" galeriePNG_"$1"/capture%d.png`

notify-send "Vidéo vers Galerie d'images" "Galerie PNG de $1 créée avec succès ($number images, débute à la $secondeème seconde) !";
fi

	## Option 'Format JPG' sélectionnée
	if [ "$option" = "Galerie JPG" ]; then
	# Entrer le nombre d'images
	number=`zenity --entry --title="Nombre d'images à générer" --entry-text "10" --text="Choisissez le nombre d'images issues de votre vidéo source. \n\nEntrez uniquement une valeur numérique."`

	# Entrer le début de la génération (seconde de départ)
	seconde=`zenity --entry --title="Début de la première image" --entry-text "1" --text="À partir de combien de secondes de votre vidéo voulez-vous démarrer la galerie ? \n\nEntrez uniquement une valeur numérique."`

	# Génération de la galerie JPG
	mkdir galerieJPG_"$1"
	genere_jpg=`avconv -i "$1" -ss "$seconde" -vframes "$number" galerieJPG_"$1"/capture%d.jpg`

notify-send "Vidéo vers Galerie d'images" "Galerie JPG de $1 créée avec succès ($number images, débute à la $secondeème seconde) !";
fi
### FIN DU SCRIPT		
fi
### FIN DU SCRIPT
